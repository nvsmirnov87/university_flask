Веб-приложение: Python2.7, Flask, postgreSQL.
В веб-приложении реализовано: просмотр, добавление, редактирование, удаление записей БД:
студенты, дисциплины, специальности, оценки, также реализован просмотр профиля студента с оценками.
При этом приложение (RestFull) не допускает внесение некорректных данны в БД: нет возможности на одной специальности добавлять две дисциплины с одинаковыми именами, нельзя добавить оценку студенту по дисциплине, которую он не изучает,.... 
При разработке было принято решение отказаться от ORM и использован модуль psycopg2 для работы с БД. Разработана своя функция пагинации. 
Использование BluePrints + RestFull в проекте позволили разбить приложение на отдельные части: БД, api, view, templates. В структуре проекта:
api_1_0 -> API 
main -> формы, модели, view,
static -> файл с константами и функцией пагинации.
templates -> HTML-шаблоны + JS.
. -> manage.py для запуска приложения.

Фронтенд реализован на уровне таблиц на белом фоне. При необходимости, нетрудно разработать более привлекательные веб страницы.
В паке Scripts добавленны скрипты на PL/pgSQL для создания и заполнения таблиц БД (200 специальностей подготовки, 20000 дисциплин, 20000 студентов, 1200000 оценок).


Чтобы запустить приложение:
﻿1. Настраиваем ОС для поддержки виртуальных окружений. 

Ставим виртуальное окружение: 
mkvirtualenv --no-site-packages --python=/usr/bin/python2.7 venv

С виртуального окружения ставим доп. пакеты из главной директории проекта:
pip install -r requirements.txt

2. Создаем БД и пользователя:
sudo -u postgres psql
postgres=# CREATE DATABASE university_db;
postgres=# CREATE USER admin WITH password 'admin';
postgres=# GRANT ALL privileges ON DATABASE university_db TO admin;

3. Запускаем скрипты из папки Scripts.
В БД создаем таблицы:
psql -h localhost -U admin -d university_db -f "create_tables.sql"
и заполняем их данными (займет 1-2 мин):
psql -h localhost -U admin -d university_db -f "insert_data_in_tables.sql"

4. Запускаем приложение с интерпритатором виртуального окржуения из главной директории проекта:
python manage.py runserver

5. В браузере переходим по адресу: localhost:5000

